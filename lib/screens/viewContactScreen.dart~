
import 'dart:io';

import 'package:flutter/material.dart';
import 'package:flutter_contacts/screens/editContactScreen.dart';
import 'package:geolocator/geolocator.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import '../models/contact.dart';


class viewContactScreen extends StatefulWidget {
  final Contact contact;
  const viewContactScreen({super.key, required this.contact});

  @override
  _viewContactScreenState createState() => _viewContactScreenState();
}

class _viewContactScreenState extends State<viewContactScreen> {
  LatLng? _userLocation;
  late GoogleMapController _mapController;

  @override
  void initState() {
    super.initState();
    _getUserLocation();
  }

  Future<void> _getUserLocation() async {
    bool serviceEnabled;
    LocationPermission permission;

    // Verifique se os serviços de localização estão habilitados
    serviceEnabled = await Geolocator.isLocationServiceEnabled();
    if (!serviceEnabled) {
      // Serviços de localização não estão habilitados
      return;
    }

    // Verifique as permissões
    permission = await Geolocator.checkPermission();
    if (permission == LocationPermission.denied) {
      permission = await Geolocator.requestPermission();
      if (permission == LocationPermission.denied) {
        // Permissões negadas
        return;
      }
    }

    if (permission == LocationPermission.deniedForever) {
      // Permissões permanentemente negadas
      return;
    }

    // Obtenha a localização atual
    Position position = await Geolocator.getCurrentPosition();
    setState(() {
      _userLocation = LatLng(position.latitude, position.longitude);
    });
  }

  @override
  Widget build(BuildContext context){
    return Scaffold(
      appBar: AppBar(
        title: Text("Contact Details"),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            //TODO-> Temos que substituir isto pela foto do contacto se tiver se não colocar este icone
            CircleAvatar(
              radius: 60,
              backgroundImage: widget.contact.imagePath != null
              ? FileImage(File(widget.contact.imagePath!)) : null,
              child:
                  widget.contact.imagePath == null
                      ? Icon(Icons.person, size: 60, color: Colors.white) : null,
              backgroundColor: Theme.of(context).primaryColor,
            ),
            const SizedBox(height: 16),
            Center(
              child: Text(
                widget.contact.name,
                style: const TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
            const SizedBox(height: 8),
            const SizedBox(height: 16),
            const Divider(thickness: 1),
            const SizedBox(height: 8),
            _buildDetailRow(Icons.phone, 'Phone', widget.contact.phone),
            const SizedBox(height: 16),
            _buildDetailRow(Icons.email, 'Email', widget.contact.email),
            const SizedBox(height: 16),
            if(widget.contact.birthdate != null)
              _buildDetailRow(Icons.cake, 'Birthdate', widget.contact.birthdate!),
              const SizedBox(height: 8),
            _userLocation == null
                ? const Center(child: CircularProgressIndicator())
                : SizedBox(
              height: 200,
              child: GoogleMap(
                initialCameraPosition: CameraPosition(
                  target: _userLocation!,
                  zoom: 12,
                ),
                myLocationEnabled: true,
                myLocationButtonEnabled: true,
                onMapCreated: (GoogleMapController controller) {
                  _mapController = controller;
                },
              ),
            ),
            const Spacer(),
            Center(
              child: ElevatedButton.icon(
                  onPressed: () async{
                    final updateContact =  await Navigator.push<Contact>(
                      context,
                      MaterialPageRoute(
                        builder: (context) => EditContactScreen(contact: widget.contact),
                      ),
                  );
                    if(updateContact != null){
                      Navigator.pop(context, updateContact);
                    }else{
                      Navigator.pop(context);
                    }
                  },
                  icon: const Icon(Icons.edit),
                  label: const Text("Edit contact"),
              )
            )
          ],
        ),
      ),
    );
  }
}

Widget _buildDetailRow(IconData icon, String label, String value) {
  return Row(
    children: [
      Icon(icon, color: Colors.grey.shade700),
      const SizedBox(width: 16),
      Expanded(
        child: Text(
          label,
          style: const TextStyle(
            fontSize: 16,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
      Text(
        value,
        style: const TextStyle(fontSize: 16),
      ),
    ],
  );
}
